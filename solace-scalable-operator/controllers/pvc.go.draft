/*package controllers

import (
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/api/resource"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	scalablev1alpha1 "solace.io/api/v1alpha1"
)

func PersistentVolumeClaim(s *scalablev1alpha1.SolaceScalable) *corev1.PersistentVolumeClaim {

	return &corev1.PersistentVolumeClaim{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "pvc",
			Namespace: s.Namespace,
			Labels:    labels(s)},

		Spec: corev1.PersistentVolumeClaimSpec{
			AccessModes: []corev1.PersistentVolumeAccessMode{corev1.ReadWriteOnce},
			Selector:    &metav1.LabelSelector{MatchLabels: labels(s)},
			Resources: corev1.ResourceRequirements{
				Requests: corev1.ResourceList{
					"storage":  resource.MustParse("10Gi"),
					"capacity": resource.MustParse("10Gi"),
				},
			},
			VolumeName: s.Name,
		},
	}
}*/
